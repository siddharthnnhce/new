{"version":3,"file":"bundle-webpack.js","names":["extensions","outputDir","path","posix","join","slash","process","cwd","cacheLocation","getApisToRemoveForQueryEngine","apisToKeep","Set","schemaCustomizationAPIs","add","apisToRemove","Object","keys","nodeApis","filter","api","has","getInternalPackagesCacheDir","functionsTarget","platform","arch","createInternalPackagesCacheDir","cacheDir","fs","ensureDir","packageJsonPath","existsSync","emptyDir","outputJson","name","description","version","private","author","license","getLMDBBinaryFromSiteLocation","lmdbPackageName","packageJson","modulePath","dirname","require","resolve","replace","JSON","parse","readFileSync","e","undefined","optionalDependencies","find","p","Error","getPackageLocationFromRequireContext","location","packageName","packageVersion","requireId","locationRequire","mod","createRequire","packageJsonLocation","checkIfInstalledInInternalPackagesCache","packageStatus","packageLocationFromInternalPackageCache","relative","startsWith","needToInstall","packageLocation","checkIfNeedToInstallMissingLmdb","lmdbBinaryFromSiteLocation","dependencies","lmdb","sharedPackageStatus","checkIfNeedToInstallMissingSharp","currentTarget","sharp","vendor","installed","includes","current","versions","installMissing","packages","shouldInstall","Boolean","packagesToInstall","length","options","stderr","env","npm_config_arch","npm_config_platform","SHARP_IGNORE_GLOBAL_LIBVIPS","npmAdditionalCliArgs","execa","map","info","createGraphqlEngineBundle","rootDir","reporter","isVerbose","state","store","getState","pathPrefix","program","prefixPaths","config","schemaSnapshotString","readFile","printQueryEnginePlugins","assetRelocatorUseEntry","loader","outputAssetBase","gatsbyPluginTSRequire","getCurrentPlatformAndTarget","getFunctionsTargetPlatformAndTarget","dynamicAliases","forcedLmdbBinaryModule","lmdbPackageInfo","sharpPackageInfo","compiler","webpack","mode","entry","__dirname","output","filename","libraryTarget","target","externalsPresets","node","cache","type","buildDependencies","__filename","stringify","externals","builtinModules","reduce","acc","builtinModule","module","rules","oneOf","test","parser","amd","use","forcedBinaryModule","remove","jsx","exclude","presets","byDependency","esm","fullySpecified","alias","inquirer","plugins","EnvironmentPlugin","DefinePlugin","SCHEMA_SNAPSHOT","PATH_PREFIX","GATSBY_SLICES","GATSBY_WEBPACK_LOGGING","WebpackLoggingPlugin","Promise","reject","run","err","stats","getResourcePath","webpackModule","ConcatenatedModule","resource","modules","firstSubModule","iterateModules","webpackModules","compilation","resourcePath","importedBy","moduleGraph","getIssuer","structuredError","id","context","package","advisory","binaryFixingPromises","asset","assetsInfo","Map","endsWith","targetRelPath","assetMeta","getAssetMeta","sourcePath","dist","push","copyFile","all","close","closeErr"],"sources":["../../../src/schema/graphql-engine/bundle-webpack.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\n\nimport * as path from \"path\"\nimport * as fs from \"fs-extra\"\nimport execa, { Options as ExecaOptions } from \"execa\"\nimport webpack, { Module, NormalModule, Compilation } from \"webpack\"\nimport ConcatenatedModule from \"webpack/lib/optimize/ConcatenatedModule\"\nimport { dependencies } from \"gatsby/package.json\"\nimport { printQueryEnginePlugins } from \"./print-plugins\"\nimport mod from \"module\"\nimport { WebpackLoggingPlugin } from \"../../utils/webpack/plugins/webpack-logging\"\nimport { getAssetMeta } from \"@vercel/webpack-asset-relocator-loader\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { schemaCustomizationAPIs } from \"./print-plugins\"\nimport type { GatsbyNodeAPI } from \"../../redux/types\"\nimport * as nodeApis from \"../../utils/api-node-docs\"\nimport { store } from \"../../redux\"\nimport { PackageJson } from \"../../..\"\nimport { slash } from \"gatsby-core-utils/path\"\nimport { isEqual } from \"lodash\"\nimport {\n  IPlatformAndArch,\n  getCurrentPlatformAndTarget,\n  getFunctionsTargetPlatformAndTarget,\n} from \"../../utils/engines-helpers\"\n\ntype Reporter = typeof reporter\n\nconst extensions = [`.mjs`, `.js`, `.json`, `.node`, `.ts`, `.tsx`]\n\nconst outputDir = path.posix.join(\n  slash(process.cwd()),\n  `.cache`,\n  `query-engine`\n)\nconst cacheLocation = path.posix.join(\n  slash(process.cwd()),\n  `.cache`,\n  `webpack`,\n  `query-engine`\n)\n\nfunction getApisToRemoveForQueryEngine(): Array<GatsbyNodeAPI> {\n  const apisToKeep = new Set(schemaCustomizationAPIs)\n  apisToKeep.add(`onPluginInit`)\n\n  const apisToRemove = (Object.keys(nodeApis) as Array<GatsbyNodeAPI>).filter(\n    api => !apisToKeep.has(api)\n  )\n  return apisToRemove\n}\n\nconst getInternalPackagesCacheDir = (\n  functionsTarget: IPlatformAndArch\n): string =>\n  path.posix.join(\n    slash(process.cwd()),\n    `.cache`,\n    `internal-packages`,\n    `${functionsTarget.platform}-${functionsTarget.arch}`\n  )\n\n// Create a directory and JS module where we install internally used packages\nconst createInternalPackagesCacheDir = async (\n  functionsTarget: IPlatformAndArch\n): Promise<void> => {\n  const cacheDir = getInternalPackagesCacheDir(functionsTarget)\n  await fs.ensureDir(cacheDir)\n\n  const packageJsonPath = path.join(cacheDir, `package.json`)\n\n  if (!fs.existsSync(packageJsonPath)) {\n    await fs.emptyDir(cacheDir)\n\n    await fs.outputJson(packageJsonPath, {\n      name: `gatsby-internal-packages`,\n      description: `This directory contains internal packages installed by Gatsby used to comply with the current platform requirements`,\n      version: `1.0.0`,\n      private: true,\n      author: `Gatsby`,\n      license: `MIT`,\n      functionsTarget,\n    })\n  }\n}\n\nfunction getLMDBBinaryFromSiteLocation(\n  lmdbPackageName: string,\n  version: string,\n  functionsTarget: IPlatformAndArch\n): string | undefined {\n  // Read lmdb's package.json, go through its optional depedencies and validate if there's a prebuilt lmdb module with a compatible binary to our platform and arch\n  let packageJson: PackageJson\n  try {\n    const modulePath = path\n      .dirname(slash(require.resolve(`lmdb`)))\n      .replace(`/dist`, ``)\n    const packageJsonPath = path.join(modulePath, `package.json`)\n    packageJson = JSON.parse(fs.readFileSync(packageJsonPath, `utf-8`))\n  } catch (e) {\n    // If we fail to read lmdb's package.json there's bigger problems here so just skip installation\n    return undefined\n  }\n  // If there's no lmdb prebuilt package for our arch/platform listed as optional dep no point in trying to install it\n  const { optionalDependencies = {} } = packageJson\n  if (!Object.keys(optionalDependencies).find(p => p === lmdbPackageName)) {\n    throw new Error(\n      `Target platform/arch for functions execution (${functionsTarget.platform}/${functionsTarget.arch}) is not supported.`\n    )\n  }\n  return getPackageLocationFromRequireContext(\n    slash(require.resolve(`lmdb`)),\n    lmdbPackageName,\n    version\n  )\n}\n\nfunction getPackageLocationFromRequireContext(\n  location: string,\n  packageName: string,\n  packageVersion?: string\n): string | undefined {\n  try {\n    const requireId = `${packageName}/package.json`\n    const locationRequire = mod.createRequire(location)\n    const packageJsonLocation = slash(locationRequire.resolve(requireId))\n\n    if (packageVersion) {\n      // delete locationRequire.cache[requireId]\n      const { version } = JSON.parse(\n        fs.readFileSync(packageJsonLocation, `utf-8`)\n      )\n      if (packageVersion !== version) {\n        return undefined\n      }\n    }\n\n    return path.dirname(packageJsonLocation)\n  } catch (e) {\n    return undefined\n  }\n}\n\ninterface ILMDBBinaryPackageStatusBase {\n  packageName: string\n  needToInstall: boolean\n  packageVersion: string\n}\n\ninterface ILMDBBinaryPackageStatusInstalled\n  extends ILMDBBinaryPackageStatusBase {\n  needToInstall: false\n  packageLocation: string\n}\n\ninterface ILMDBBinaryPackageStatusNeedAlternative\n  extends ILMDBBinaryPackageStatusBase {\n  needToInstall: true\n}\n\ntype IBinaryPackageStatus =\n  | ILMDBBinaryPackageStatusInstalled\n  | ILMDBBinaryPackageStatusNeedAlternative\n\nfunction checkIfInstalledInInternalPackagesCache(\n  packageStatus: IBinaryPackageStatus,\n  functionsTarget: IPlatformAndArch\n): IBinaryPackageStatus {\n  const cacheDir = getInternalPackagesCacheDir(functionsTarget)\n\n  const packageLocationFromInternalPackageCache =\n    getPackageLocationFromRequireContext(\n      path.posix.join(cacheDir, `:internal:`),\n      packageStatus.packageName,\n      packageStatus.packageVersion\n    )\n\n  if (\n    packageLocationFromInternalPackageCache &&\n    !path.posix\n      .relative(cacheDir, packageLocationFromInternalPackageCache)\n      .startsWith(`..`)\n  ) {\n    return {\n      ...packageStatus,\n      needToInstall: false,\n      packageLocation: packageLocationFromInternalPackageCache,\n    }\n  }\n\n  return {\n    ...packageStatus,\n    needToInstall: true,\n  }\n}\n\n// Install lmdb's native system module under our internal cache if we detect the current installation\n// isn't using the pre-build binaries\nfunction checkIfNeedToInstallMissingLmdb(\n  functionsTarget: IPlatformAndArch\n): IBinaryPackageStatus {\n  // lmdb module with prebuilt binaries for target platform\n  const lmdbPackageName = `@lmdb/lmdb-${functionsTarget.platform}-${functionsTarget.arch}`\n\n  const lmdbBinaryFromSiteLocation = getLMDBBinaryFromSiteLocation(\n    lmdbPackageName,\n    dependencies.lmdb,\n    functionsTarget\n  )\n\n  const sharedPackageStatus: ILMDBBinaryPackageStatusNeedAlternative = {\n    needToInstall: true,\n    packageName: lmdbPackageName,\n    packageVersion: dependencies.lmdb,\n  }\n\n  if (lmdbBinaryFromSiteLocation) {\n    return {\n      ...sharedPackageStatus,\n      needToInstall: false,\n      packageLocation: lmdbBinaryFromSiteLocation,\n    }\n  }\n\n  return checkIfInstalledInInternalPackagesCache(\n    sharedPackageStatus,\n    functionsTarget\n  )\n}\n\nfunction checkIfNeedToInstallMissingSharp(\n  functionsTarget: IPlatformAndArch,\n  currentTarget: IPlatformAndArch\n): IBinaryPackageStatus | undefined {\n  try {\n    // check if sharp is resolvable\n    const sharp: typeof import(\"sharp\") = require(`sharp`)\n\n    if (isEqual(functionsTarget, currentTarget)) {\n      // if current platform and target is the same as functions target, we need to check if vendored libvips\n      // exists in the current sharp installation as it will be needed in lambda\n      if (sharp.vendor.installed.includes(sharp.vendor.current)) {\n        // vendored libvips is installed, so we can use it\n        return undefined\n      }\n    }\n\n    return checkIfInstalledInInternalPackagesCache(\n      {\n        needToInstall: true,\n        packageName: `sharp`,\n        packageVersion:\n          sharp.versions.sharp ?? require(`sharp/package.json`).version,\n      },\n      functionsTarget\n    )\n  } catch (e) {\n    return undefined\n  }\n}\n\nasync function installMissing(\n  packages: Array<IBinaryPackageStatus | undefined>,\n  functionsTarget: IPlatformAndArch\n): Promise<Array<IBinaryPackageStatus | undefined>> {\n  function shouldInstall(\n    p: IBinaryPackageStatus | undefined\n  ): p is IBinaryPackageStatus {\n    return Boolean(p?.needToInstall)\n  }\n\n  const packagesToInstall = packages.filter(shouldInstall)\n\n  if (packagesToInstall.length === 0) {\n    return packages\n  }\n\n  await createInternalPackagesCacheDir(functionsTarget)\n\n  const cacheDir = getInternalPackagesCacheDir(functionsTarget)\n\n  const options: ExecaOptions = {\n    stderr: `inherit`,\n    cwd: cacheDir,\n    env: {\n      npm_config_arch: functionsTarget.arch,\n      npm_config_platform: functionsTarget.platform,\n      // force sharp to download vendored libvips and not skip it if globally installed libvips matches sharp requirements\n      // so that produced function is self-sufficient and doesn't rely on function execution environment having (same)\n      // globally available libvips\n      SHARP_IGNORE_GLOBAL_LIBVIPS: `1`,\n    },\n  }\n\n  const npmAdditionalCliArgs = [\n    `--no-progress`,\n    `--no-audit`,\n    `--no-fund`,\n    `--loglevel`,\n    `error`,\n    `--color`,\n    `always`,\n    `--legacy-peer-deps`,\n    `--save-exact`,\n    // target platform might be different than current and force allows us to install it\n    `--force`,\n  ]\n\n  await execa(\n    `npm`,\n    [\n      `install`,\n      ...npmAdditionalCliArgs,\n      ...packagesToInstall.map(p => `${p.packageName}@${p.packageVersion}`),\n    ],\n    options\n  )\n\n  return packages.map(info =>\n    info\n      ? info.needToInstall\n        ? {\n            ...info,\n            needToInstall: false,\n            packageLocation: path.posix.join(\n              cacheDir,\n              `node_modules`,\n              info.packageName\n            ),\n          }\n        : info\n      : undefined\n  )\n}\n\nexport async function createGraphqlEngineBundle(\n  rootDir: string,\n  reporter: Reporter,\n  isVerbose?: boolean\n): Promise<webpack.Compilation | undefined> {\n  const state = store.getState()\n  const pathPrefix = state.program.prefixPaths\n    ? state.config.pathPrefix ?? ``\n    : ``\n\n  const schemaSnapshotString = await fs.readFile(\n    path.join(rootDir, `.cache`, `schema.gql`),\n    `utf-8`\n  )\n  await printQueryEnginePlugins()\n\n  const assetRelocatorUseEntry = {\n    loader: require.resolve(`@vercel/webpack-asset-relocator-loader`),\n    options: {\n      outputAssetBase: `assets`,\n    },\n  }\n\n  const gatsbyPluginTSRequire = mod.createRequire(\n    require.resolve(`gatsby-plugin-typescript`)\n  )\n\n  const currentTarget = getCurrentPlatformAndTarget()\n  const functionsTarget = getFunctionsTargetPlatformAndTarget()\n\n  const dynamicAliases: Record<string, string> = {}\n  let forcedLmdbBinaryModule: string | undefined = undefined\n\n  // we need to make sure we have internal packages cache directory setup for current lambda target\n  // before we attempt to check if we can reuse those packages\n  await createInternalPackagesCacheDir(functionsTarget)\n\n  const [lmdbPackageInfo, sharpPackageInfo] = await installMissing(\n    [\n      checkIfNeedToInstallMissingLmdb(functionsTarget),\n      checkIfNeedToInstallMissingSharp(functionsTarget, currentTarget),\n    ],\n    functionsTarget\n  )\n\n  if (!lmdbPackageInfo) {\n    throw new Error(`Failed to find required LMDB binary`)\n  } else if (functionsTarget.platform === `linux`) {\n    // function execution platform is primarily linux, which is tested the most, so we only force that specific binary\n    // to not cause untested code paths\n    if (lmdbPackageInfo.needToInstall) {\n      throw new Error(\n        `Failed to locate or install LMDB binary for functions execution platform/arch (${functionsTarget.platform}/${functionsTarget.arch})`\n      )\n    }\n\n    forcedLmdbBinaryModule = `${lmdbPackageInfo.packageLocation}/node.abi83.glibc.node`\n  }\n\n  if (sharpPackageInfo) {\n    if (sharpPackageInfo.needToInstall) {\n      throw new Error(\n        `Failed to locate or install Sharp binary for functions execution platform/arch (${functionsTarget.platform}/${functionsTarget.arch})`\n      )\n    }\n    dynamicAliases[`sharp$`] = sharpPackageInfo.packageLocation\n  }\n\n  const compiler = webpack({\n    name: `Query Engine`,\n    // mode: `production`,\n    mode: `none`,\n    entry: path.join(__dirname, `entry.js`),\n    output: {\n      path: outputDir,\n      filename: `index.js`,\n      libraryTarget: `commonjs`,\n    },\n    target: `node`,\n    externalsPresets: {\n      node: false,\n    },\n    cache: {\n      type: `filesystem`,\n      name: `graphql-engine`,\n      cacheLocation,\n      buildDependencies: {\n        config: [__filename],\n      },\n      version: JSON.stringify(functionsTarget),\n    },\n    // those are required in some runtime paths, but we don't need them\n    externals: [\n      `cbor-x`, // optional dep of lmdb-store, but we are using `msgpack` (default) encoding, so we don't need it\n      `electron`, // :shrug: `got` seems to have electron specific code path\n      mod.builtinModules.reduce((acc, builtinModule) => {\n        if (builtinModule === `fs`) {\n          acc[builtinModule] = `global _actualFsWrapper`\n          acc[`node:${builtinModule}`] = `global _actualFsWrapper`\n        } else {\n          acc[builtinModule] = `commonjs ${builtinModule}`\n          acc[`node:${builtinModule}`] = `commonjs ${builtinModule}`\n        }\n\n        return acc\n      }, {}),\n    ],\n    module: {\n      rules: [\n        {\n          oneOf: [\n            {\n              // specific set of loaders for sharp\n              test: /node_modules[/\\\\]sharp[/\\\\].*\\.[cm]?js$/,\n              // it is recommended for Node builds to turn off AMD support\n              parser: { amd: false },\n              use: [\n                assetRelocatorUseEntry,\n                {\n                  loader: require.resolve(`./sharp-bundling-patch`),\n                },\n              ],\n            },\n            {\n              // specific set of loaders for LMBD - our custom patch to massage lmdb to work with relocator -> relocator\n              test: /node_modules[/\\\\]lmdb[/\\\\].*\\.[cm]?js/,\n              // it is recommended for Node builds to turn off AMD support\n              parser: { amd: false },\n              use: [\n                assetRelocatorUseEntry,\n                {\n                  loader: require.resolve(`./lmdb-bundling-patch`),\n                  options: {\n                    forcedBinaryModule: forcedLmdbBinaryModule,\n                  },\n                },\n              ],\n            },\n            {\n              // specific set of loaders for gatsby-node files - our babel transform that removes lifecycles not needed for engine -> relocator\n              test: /gatsby-node\\.(cjs|mjs|js|ts)$/,\n              // it is recommended for Node builds to turn off AMD support\n              parser: { amd: false },\n              use: [\n                assetRelocatorUseEntry,\n                {\n                  loader: require.resolve(\n                    `../../utils/webpack/loaders/webpack-remove-exports-loader`\n                  ),\n                  options: {\n                    remove: getApisToRemoveForQueryEngine(),\n                    jsx: false,\n                  },\n                },\n              ],\n            },\n            {\n              // generic loader for all other cases than lmdb or gatsby-node - we don't do anything special other than using relocator on it\n              // For node binary relocations, include \".node\" files as well here\n              test: /\\.(cjs|mjs|js|ts|node)$/,\n              // it is recommended for Node builds to turn off AMD support\n              parser: { amd: false },\n              use: assetRelocatorUseEntry,\n            },\n          ],\n        },\n        {\n          test: /\\.ts$/,\n          exclude: /node_modules/,\n          use: {\n            loader: require.resolve(`babel-loader`),\n            options: {\n              presets: [\n                gatsbyPluginTSRequire.resolve(`@babel/preset-typescript`),\n              ],\n            },\n          },\n        },\n        {\n          test: /\\.m?js$/,\n          type: `javascript/auto`,\n          resolve: {\n            byDependency: {\n              esm: {\n                fullySpecified: false,\n              },\n            },\n          },\n        },\n        {\n          test: /\\.txt/,\n          type: `asset/resource`,\n        },\n        {\n          test: /\\.(graphqls?|gqls?)$/,\n          use: {\n            loader: require.resolve(`graphql-tag/loader`),\n          },\n        },\n      ],\n    },\n    resolve: {\n      extensions,\n      alias: {\n        ...dynamicAliases,\n        \".cache\": process.cwd() + `/.cache/`,\n\n        [require.resolve(`gatsby-cli/lib/reporter/loggers/ink/index.js`)]:\n          false,\n        inquirer: false,\n        // only load one version of lmdb\n        lmdb: require.resolve(`lmdb`),\n        \"ts-node\": require.resolve(`./shims/ts-node`),\n        \"gatsby-sharp$\": require.resolve(`./shims/gatsby-sharp`),\n        \"graphql-import-node$\": require.resolve(`./shims/no-op-module`),\n        \"graphql-import-node/register$\":\n          require.resolve(`./shims/no-op-module`),\n        \"babel-runtime/helpers/asyncToGenerator\":\n          require.resolve(`./shims/no-op-module`), // undeclared dep of yurnalist (but used in code path we don't use)\n      },\n    },\n    plugins: [\n      new webpack.EnvironmentPlugin([`GATSBY_CLOUD_IMAGE_CDN`]),\n      new webpack.DefinePlugin({\n        \"process.env.GATSBY_SKIP_WRITING_SCHEMA_TO_FILE\": `true`,\n        \"process.env.NODE_ENV\": JSON.stringify(`production`),\n        SCHEMA_SNAPSHOT: JSON.stringify(schemaSnapshotString),\n        PATH_PREFIX: JSON.stringify(pathPrefix),\n        \"process.env.GATSBY_LOGGER\": JSON.stringify(`yurnalist`),\n        \"process.env.GATSBY_SLICES\": JSON.stringify(\n          !!process.env.GATSBY_SLICES\n        ),\n        \"process.env.GATSBY_FUNCTIONS_PLATFORM\": JSON.stringify(\n          functionsTarget.platform\n        ),\n        \"process.env.GATSBY_FUNCTIONS_ARCH\": JSON.stringify(\n          functionsTarget.arch\n        ),\n      }),\n      process.env.GATSBY_WEBPACK_LOGGING?.includes(`query-engine`) &&\n        new WebpackLoggingPlugin(rootDir, reporter, isVerbose),\n    ].filter(Boolean) as Array<webpack.WebpackPluginInstance>,\n  })\n\n  return new Promise((resolve, reject) => {\n    compiler.run(async (err, stats): Promise<void> => {\n      function getResourcePath(\n        webpackModule?: Module | NormalModule | ConcatenatedModule | null\n      ): string | undefined {\n        if (webpackModule && !(webpackModule instanceof ConcatenatedModule)) {\n          return (webpackModule as NormalModule).resource\n        }\n\n        if (webpackModule?.modules) {\n          // ConcatenatedModule is a collection of modules so we have to go deeper to actually get a path,\n          // at this point we won't know which one so we just grab first module here\n          const [firstSubModule] = webpackModule.modules\n          return getResourcePath(firstSubModule)\n        }\n\n        return undefined\n      }\n\n      function iterateModules(\n        webpackModules: Set<Module>,\n        compilation: Compilation\n      ): void {\n        for (const webpackModule of webpackModules) {\n          if (webpackModule instanceof ConcatenatedModule) {\n            iterateModules(\n              (webpackModule as ConcatenatedModule).modules,\n              compilation\n            )\n          } else {\n            const resourcePath = getResourcePath(webpackModule)\n            if (resourcePath?.includes(`ts-node`)) {\n              const importedBy = getResourcePath(\n                compilation.moduleGraph.getIssuer(webpackModule)\n              )\n              const structuredError = {\n                id: `98011`,\n                context: {\n                  package: `ts-node`,\n                  importedBy,\n                  advisory: `Gatsby is supporting TypeScript natively (see https://gatsby.dev/typescript). \"ts-node\" might not be needed anymore at all, consider removing it.`,\n                },\n              }\n              throw structuredError\n            }\n          }\n        }\n      }\n\n      try {\n        if (stats?.compilation.modules) {\n          iterateModules(stats.compilation.modules, stats.compilation)\n        }\n\n        if (!isEqual(functionsTarget, currentTarget)) {\n          const binaryFixingPromises: Array<Promise<void>> = []\n          // sigh - emitAsset used by relocator seems to corrupt binaries\n          // resulting in \"ELF file's phentsize not the expected size\" errors\n          // - see size diff\n          //   > find . -name node.abi83.glibc.node\n          // ./.cache/internal-packages/node_modules/@lmdb/lmdb-linux-x64/node.abi83.glibc.node\n          // ./.cache/query-engine/assets/node.abi83.glibc.node\n          // > ls -al ./.cache/query-engine/assets/node.abi83.glibc.node\n          // -rw-r--r-- 1 misiek 197121 1285429 Mar 14 11:36 ./.cache/query-engine/assets/node.abi83.glibc.node\n          // > ls -al ./.cache/internal-packages/node_modules/@lmdb/lmdb-linux-x64/node.abi83.glibc.node\n          // -rw-r--r-- 1 misiek 197121 693544 Mar 14 11:35 ./.cache/internal-packages/node_modules/@lmdb/lmdb-linux-x64/node.abi83.glibc.node\n          // so this tries to fix it by straight copying it over\n          for (const asset of (\n            stats?.compilation?.assetsInfo ?? new Map()\n          ).keys()) {\n            if (asset?.endsWith(`.node`)) {\n              const targetRelPath = path.posix.relative(`assets`, asset)\n              const assetMeta = getAssetMeta(targetRelPath, stats?.compilation)\n              const sourcePath = assetMeta?.path\n              if (sourcePath) {\n                const dist = path.join(outputDir, asset)\n                binaryFixingPromises.push(fs.copyFile(sourcePath, dist))\n              }\n            }\n          }\n\n          await Promise.all(binaryFixingPromises)\n        }\n\n        compiler.close(closeErr => {\n          if (err) {\n            return reject(err)\n          }\n          if (closeErr) {\n            return reject(closeErr)\n          }\n          return resolve(stats?.compilation)\n        })\n      } catch (e) {\n        reject(e)\n      }\n    })\n  })\n}\n"],"mappings":"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"}